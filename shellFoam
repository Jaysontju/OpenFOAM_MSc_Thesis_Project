#!/bin/bash

: <<'MYCOMMENT'

############### .bashrc .profile ###############
# Contents of .bashrc, .bashrc will be executed when the user opens a terminal
# NOTE : a non-login shell will only source .bashrc and NOTHING else !
test -r /opt/proto/profile && . /opt/proto/profile
test -r $HOME/.profile && . $HOME/.profile

# source /opt64/OpenFOAM/scripts/openfoam.bashrc
source $HOME/OpenFOAM/OpenFOAM-2.3.0/etc/bashrc WM_NCOMPPROCS=4 WM_MPLIB=SYSTEMOPENMPI

# Contents of .profile, .profile will be executed when the user login
# NOTE: a login shell will source /etc/profile and then ~/.profile or it's
# equivalents, but NOT .bashrc !

alias OF230='wmUNSET; source /opt64/OpenFOAM/scripts/openfoam.bashrc'
alias myOF230='wmUNSET; source $HOME/OpenFOAM/OpenFOAM-2.3.0/etc/bashrc WM_NCOMPPROCS=4 WM_MPLIB=SYSTEMOPENMPI'





############### OpenFOAM ############################################################
makeAxialMesh -axis axis -wedge frontAndBack

# Using mapFields
mapFields -sourceTime latestTime -consistent ../cGRI3

# for unloading most of the OF environment variables.
wmUNSET

ps
pidof pisoFoam
foamEndJob -now 4021

sample -time 0
sample -latestTime

checkMesh -latestTime
checkMesh -constant
checkMesh -time 1

foamCalc components U -time 10000

foamCalc mag U -time 10000

foamLog log
gnuplot
set logscale y
plot "CH4_0"
unset logscale
set yrange [0:2]





############### Parallel ############################################################
foamJob mpirun -np 4 Foam -parallel
mpirun -np 4 Foam -parallel > log &
mpirun –hostfile machines -np 4 reactingFoam -parallel > log &





############### File Transfer ###############
for graphics transfer over the network use
ssh -CX TUD276420
ssh -CY TUD276420 (C - compressed, Y - secure)





############### Search/Locate/Replace ###############################################
# find all files with name controlDict that contains the word 'functions'
find $FOAM_TUTORIALS -name controlDict | xargs grep 'functions' -sl

# search commands
grep -r functionObjectLibs $FOAM_TUTORIALS
grep -r --include "fvSchemes" Gauss .
grep -r --include "fvSchemes" -B 3 limitedLinear . //3 lines before match
grep -r --include "fvSchemes" -A 3 limitedLinear . //3 lines after match
use -h to hide filenames with grep

# replace postProcessing_sets_ with nothing
find . -type f -name 'postProcessing_sets_*' | while read FILE ; do
  newfile="$(echo ${FILE} |sed -e 's/postProcessing_sets_//')" ;
  mv "${FILE}" "${newfile}" ;
done





############### sed command ########################################################
http://www.grymoire.com/Unix/Sed.html#uh-30

$ sed 's/find/replace/' <file1 >file2 (s stands for substitute, will substitute only 
the first occurence on each line because sed is line oriented)
note when there is a special character in the pattern string use \
example /usr/local/bin shoule be \/usr\/local\/bin

To substitute all occurences use g flag
echo "123 456 abc" | sed 's/[0-9][0-9]*/& &/' returns 123 123 456 abc
echo "123 456 abc" | sed 's/[0-9][0-9]*/& &/g' returns 123 123 456 456 abc

& corressponds to the pattern found and could be used wonderfully
echo "123 abc" | sed 's/[0-9]*/& &/'  returns "123 123 abc"
echo "123 abc" | sed 's/[0-9]*/&&/'  returns "123123 abc"
echo "abc 123" | sed 's/[0-9]*/&&/' returns "abc 123"
echo "abc 123" | sed 's/[0-9][0-9]*/&&/' returns "abc 123123"
echo "123 456 abc" | sed 's/[0-9]*/& &/' returns "123 123 456 abc" proves sed substitutes 
only the first occurence on each line
Note:  "[0-9]*" matches zero or more numbers. "[0-9][0-9]*" matches one or more numbers.

If you wanted to keep the first word of a line, and delete the rest of the line, 
mark the important part with the parenthesis \([a-z]*\) followed by ".*" that matches 
contiguous zero or more characters after the first match. 
echo abcd123 | sed 's/\([a-z]*\).*/\1/' returns abcd
echo abcd xyz | sed 's/\([a-z]*\) \([a-z]*\)/\2 \1/'

//https://nixtricks.wordpress.com/2013/01/09/sed-delete-the-lines-lying-in-between-two-patterns/

to modify the file itself include the “-i” flag.
sed -i '/Warning/d' log

deletes the line containg --> FOAM Warning
sed '/--> FOAM Warning/d' log > logNoWarning

deletes the line between --> FOAM Warning and out of temperature range including them
sed '/--> FOAM Warning/,/out of temperature range/d' log > logNoWarning

deletes the line between --> FOAM Warning and out of temperature range excluding them
sed '/--> FOAM Warning/,/out of temperature range/{//!d}' log > logNoWarning

.(dot) tries to match a single character. 
The ^ tries to match a pattern(any character) in the beginning of the line.
The $ tries to match a pattern in the end of the line.

To remove 1st character in every line:
sed 's/^.//' file

To remove last character of every line:
sed 's/.$//' file

To remove first character only if it is a specific character:
sed 's/^F//' file

To remove last character only if it is a specific character:
sed 's/x$//' file

To remove 1st 4 characters of every line
sed -r 's/.{4}//' file
sed -r 's/.{3}$//' file (last 4 characters)

To remove everything except the 1st 3 characters in every line:
sed -r 's/(.{3}).*/\1/' file
sed -r 's/.*(.{3})/\1/' file (last 3 characters)
.* matches any number of characters, and the first 3 characters matched are grouped using parantheses. 
In the replacement, by having \1 only the group is retained, leaving out the remaining part. 

To delete everything in a line followed by a character:
sed 's/a.*//' file

delete first three lines of file
sed -i '1,3d' *

delete last line
sed -i '$d' *



############### Miscellaneous ########################################################
touch file1
touch -- -i #to prevent accident deletion rm -rf * will prompt warning

du --block-size=MiB --max-depth=2 . | sort -n

Print shared library dependencies
ldd $FOAM_APPBIN/edcPisoFoam 

To view and save the output from a command (simpleFoam) at the same time:
simpleFoam | tee ofLog.txt

for compressing/uncompressing
gzip log
gunzip log.gz

gnome-system-monitor

To know which variables exist on your current shell type
env
export

to run shell/sh as a super user
sudo bash
sudo sh

killall gnuplot_x11
display *.png
gnuplot *.gplt

#--how to pass parameter to a dictionary file--
m4 blockMeshDict.m4 > blockMeshDict

MYCOMMENT













echo -e "\n\tOpenFOAM shell scripting "

if [ 1 == 0 ]
then
foamQuery=$(find $FOAM_TUTORIALS -name "sampleDict")
echo -e "\n\tListing all files ...\n"
 for i in $foamQuery; do
   echo $i
 done
fi

if [ 1 == 1 ]
then
echo -e "\n\tListing important environment variables ...\n"
echo WM_PROJECT_VERSION = $WM_PROJECT_VERSION
echo WM_PROJECT_DIR = $WM_PROJECT_DIR
echo WM_PROJECT_USER_DIR = $WM_PROJECT_USER_DIR
echo FOAM_SOLVERS = $FOAM_SOLVERS
echo FOAM_TUTORIALS = $FOAM_TUTORIALS
echo FOAM_USER_LIBBIN = $FOAM_USER_LIBBIN
echo FOAM_USER_APPBIN = $FOAM_USER_APPBIN
echo ParaView_VERSION = $ParaView_VERSION

echo -e "\n\n\n\tListing All foam variables ...\n"

echo FOAM_SOLVERS = $FOAM_SOLVERS
echo FOAM_APPBIN = $FOAM_APPBIN
echo FOAM_TUTORIALS = $FOAM_TUTORIALS
echo FOAM_JOB_DIR = $FOAM_JOB_DIR
echo FOAM_LIB = $FOAM_LIB
echo FOAM_SITE_APPBIN = $FOAM_SITE_APPBIN
echo FOAM_MPI_LIBBIN = $FOAM_MPI_LIBBIN
echo FOAM_APP = $FOAM_APP
echo FOAM_SITE_LIBBIN = $FOAM_SITE_LIBBIN
echo FOAM_SRC = $FOAM_SRC
echo FOAM_SIGFPE = $FOAM_SIGFPE
echo FOAM_UTILITIES = $FOAM_UTILITIES
echo FOAM_USER_LIBBIN = $FOAM_USER_LIBBIN
echo FOAM_INST_DIR = $FOAM_INST_DIR
echo FOAM_LIBBIN = $FOAM_LIBBIN
echo FOAM_RUN = $FOAM_RUN
echo FOAM_USER_APPBIN = $FOAM_USER_APPBIN


echo -e "\n\n\n\tListing All environment variables ...\n"

echo WM_THIRD_PARTY_DIR = $WM_THIRD_PARTY_DIR
echo WM_PROJECT_INST_DIR = $WM_PROJECT_INST_DIR
echo WM_PROJECT_DIR = $WM_PROJECT_DIR
echo WM_DIR = $WM_DIR
echo WM_PROJECT_USER_DIR = $WM_PROJECT_USER_DIR

echo WM_PRECISION_OPTION = $WM_PRECISION_OPTION
echo WM_ARCH_OPTION = $WM_ARCH_OPTION
echo WM_LINK_LANGUAGE = $WM_LINK_LANGUAGE
echo WM_ARCH = $WM_ARCH
echo WM_CXXFLAGS = $WM_CXXFLAGS
echo WM_CFLAGS = $WM_CFLAGS
echo WM_PROJECT_VERSION = $WM_PROJECT_VERSION
echo WM_COMPILER_LIB_ARCH = $WM_COMPILER_LIB_ARCH
echo WM_CXX = $WM_CXX
echo WM_COMPILER_ARCH = $WM_COMPILER_ARCH
echo WM_PROJECT = $WM_PROJECT
echo WM_LDFLAGS = $WM_LDFLAGS
echo WM_COMPILER = $WM_COMPILER
echo WM_MPLIB = $WM_MPLIB
echo WM_CC = $WM_CC
echo WM_COMPILE_OPTION = $WM_COMPILE_OPTION
echo WM_OPTIONS = $WM_OPTIONS
echo WM_PRECISION_OPTION = $WM_PRECISION_OPTION
echo WM_ARCH_OPTION = $WM_ARCH_OPTION

echo -e "\n"
fi
